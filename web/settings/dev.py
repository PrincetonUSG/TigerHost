"""
Django settings for tigerhost_server project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

# flake8: noqa

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get(
    'SECRET_KEY', 'b@4p$!j6-xy_&c401&krw#)0)jrv#1m2qt&7)%^9%5!+yv9*mj')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'docker_addons',
    'cas',
    'wsse',
    'api_server',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cas.middleware.CASMiddleware',
]

ROOT_URLCONF = 'urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api_server.wsgi.application'

# START CELERY CONFIGURATION

BROKER_URL = os.environ.get(
    'BROKER_URL', 'amqp://guest:guest@localhost:5672//')

CELERY_RESULT_BACKEND = os.environ.get(
    'CELERY_RESULT_BACKEND', 'redis://localhost:6379/')

CELERY_IMPORTS = (
    'api_server.addons.tasks',
    'api_server.addons.state_machine_manager',
)

CELERY_TASK_SERIALIZER = 'json'

CELERY_ACCEPT_CONTENT = ['json']

# END CELERY CONFIGURATION

# START PAAS CONFIGURATION

PAAS_BACKENDS = {
    'deis_prod': {
        'API_URL': os.environ.get('DEIS_URL', 'http://deis.local3.deisapp.com'),
        'CLIENT': 'api_server.clients.deis_client.DeisClient',
    },
}

DEFAULT_PAAS_BACKEND = 'deis_prod'

# END PAAS CONFIGURATION

# START DOCKER ADDON CONFIGURATION

DOCKER_HOST = os.environ.get('DOCKER_HOST', 'tcp://192.168.99.100:2376')
DOCKER_CERT_PATH = os.environ.get('DOCKER_CERT_PATH', '~/.docker/machine/machines/default')
DOCKER_NETWORK = os.environ.get('DOCKER_NETWORK', 'addons_network')

# END DOCKER ADDON CONFIGURATION

# START ADDON PROVIDER CONFIGURATION

ADDON_PROVIDERS = {
    'secret': {
        'CLASS': 'api_server.addons.providers.secret_provider.SecretAddonProvider',
        'ARGS': [],
        'KWARGS': {},
    },
}

# END ADDON PROVIDER CONFIGURATION

# START AUTHENTICATION CONFIGURATION

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'wsse.backends.WsseBackend',
    'cas.backends.CASBackend',
)

CAS_SERVER_URL = 'http://cast.cs.princeton.edu/'
# CAS_SERVER_URL = 'https://fed.princeton.edu/cas/'

CAS_REDIRECT_URL = '/'

CAS_EMAIL_DOMAIN = 'princeton.edu'

LOGIN_URL = '/login'

# END AUTHENTICATION CONFIGURATION


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

import dj_database_url

DATABASES = {
    'default': dj_database_url.config(default='postgres://vagrant@localhost:5432/vagrant'),
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
