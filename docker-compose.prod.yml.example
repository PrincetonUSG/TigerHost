# NOTE: aws ecs cli tool only supports version 1 docker-compose file format
rabbitmq:
    image: rabbitmq
redis:
    image: redis
nginx:
    restart: always
    build: ./nginx
    ports:
        - "80:80"
    links:
        - web:web
    volumes_from:
        - docs
docs:
    build: ./docs
web:
    restart: always
    build: ./web
    command: bin/web.sh
    environment:
        DEIS_URL: http://deis.tigerhostapp.com
        BROKER_URL: amqp://guest:guest@rabbitmq:5672//
        CELERY_RESULT_BACKEND: redis://redis:6379/
        AWS_DEFAULT_REGION: us-east-1
        DOCKER_CERT_PATH: /code/credentials
        DOCKER_NETWORK: proxy_default

        # TODO: fill out the actual values for these variables
        DOCKER_HOST: tcp://54.209.153.101:2376
        DATABASE_URL: postgres://user:password@rds_host:5432/db_name
        SECRET: abcdefghijklmnopqrstuvwxyz
    expose:
        - "8000"
    links:
        - redis:redis
        - rabbitmq:rabbitmq
worker:
    build: ./web
    command: bin/worker.sh
    environment:
        DEIS_URL: http://deis.tigerhostapp.com
        BROKER_URL: amqp://guest:guest@rabbitmq:5672//
        CELERY_RESULT_BACKEND: redis://redis:6379/
        AWS_DEFAULT_REGION: us-east-1
        DOCKER_CERT_PATH: /code/credentials
        DOCKER_NETWORK: proxy_default

        # TODO: fill out the actual values for these variables
        DOCKER_HOST: tcp://54.209.153.101:2376
        DATABASE_URL: postgres://user:password@rds_host:5432/db_name
        SECRET: abcdefghijklmnopqrstuvwxyz
    links:
        - redis:redis
        - rabbitmq:rabbitmq
